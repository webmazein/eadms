import{A as E,l as b,k as y,B as C,r as n,D as h,j as r}from"./index-DGi44GYI.js";import{u as D}from"./index-CZ4IUh_t.js";import{a as x}from"./axios-B4uVmeYG.js";import{w as S,C as w,a as R,b as g}from"./config-CokK0CWw.js";import{C as k,a as A}from"./CRow-Daorg0ix.js";import{C as T,d as $,b as j,e as d}from"./CTable-aigoybT8.js";const O=()=>{const{id:l}=E(),m=b(),c=y(e=>C(e,l)),f=n.useRef(c),u=n.useRef(5),{sendMessage:v,lastMessage:i,readyState:B}=D(`${S}`,{onOpen:()=>console.log("WebSocket connection established"),onClose:()=>console.log("WebSocket connection closed"),onError:e=>console.error("WebSocket error:",e),shouldReconnect:e=>!0});n.useEffect(()=>{async function e(){try{const t=await x.get(`${g}/zone/getZoneRecordsForToday/${l}`);if(t.data.status===200){const{data:a}=t.data,s=[];a.forEach(o=>{s.push({id:o.id,defect_name:o.defect_name,defect_name_hi:o.defect_name_hi,station_id:o.station_id,screen_no:o.screen_no,operator_name:o.operator_name,updated_at:o.updated_at,count:1,is_updated:!1})}),m(h(s))}else toast.error("Failed to fetch zone records")}catch(t){console.error("Error fetching zone records:",t),toast.error("Failed to fetch zone records")}}e()},[]),n.useEffect(()=>{if(i!==null)try{const e=JSON.parse(i.data),t=e==null?void 0:e.data;if(t!=null&&t.length){const a=[];t.forEach(s=>{a.push({id:s.id,defect_name:s.defect_name,defect_name_hi:s.defect_name_hi,station_id:s.station_id,screen_no:s.screen_no,operator_name:s.operator_name,updated_at:s.updated_at,count:1,is_updated:!1})}),m(h([...c,...a]))}}catch(e){console.error("Error parsing message:",e)}},[i]),n.useEffect(()=>{if(i!==null)try{const e=JSON.parse(i.data);e.timer&&(u.current=e.timer,sessionStorage.setItem("alert_timer",e.timer))}catch(e){console.error("Error parsing WebSocket message:",e)}},[i]),n.useEffect(()=>{(async()=>{try{const t=await x.get(`${g}/settings/alert_timer`);t.status===200?(u.current=t.data.alert_timer,sessionStorage.setItem("alert_timer",t.data.alert_timer)):toast.error("Failed to fetch alert timer value")}catch(t){console.error("Error fetching alert timer:",t),toast.error("Failed to fetch alert timer value")}})()},[]);const p=n.useMemo(()=>{const e=new Map;return c.forEach(a=>{const s=f.current.find(_=>_.id===a.id),o=s?s.count!==a.count:!0;e.set(a.id,{...a,is_updated:o})}),Array.from(e.values()).sort((a,s)=>{const o=new Date(a.updated_at);return new Date(s.updated_at)-o})},[c,f]);return n.useEffect(()=>{f.current=c},[c]),r.jsxs("div",{className:"con",children:[r.jsxs("h2",{style:{textAlign:"center",marginBottom:"20px"},children:["Engine Assembly Line Defect Monitoring System - Zone ",l||"-"]}),r.jsx(k,{className:"g-4",children:p.length>0&&p.map((e,t)=>r.jsx(A,{xs:12,sm:6,md:4,lg:3,xl:2,children:r.jsx(w,{className:`defect-card ${e.is_updated?"updated":""}`,style:e.is_updated?{animationDuration:`${u.current}s`,animationFillMode:"forwards"}:{},children:r.jsx(R,{children:r.jsx(T,{className:"custom-table",children:r.jsxs($,{children:[r.jsxs(j,{children:[r.jsx(d,{children:e.defect_name}),r.jsx(d,{children:e.operator_name}),r.jsx(d,{children:e.count||1})]}),r.jsxs(j,{children:[r.jsx(d,{children:e.defect_name_hi||"-"}),r.jsx(d,{})," ",r.jsx(d,{})," "]})]})})})},`${e.id}-${e.is_updated}`)},t))})]})};export{O as default};
